version: '3.8'

services:

  mariadb:
    container_name: maria
    image: maria
    build:
      context: ./mariadb
    # env_file: .env_db
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD_FILE: ${MYSQL_ROOT_PASSWORD_FILE}
      MYSQL_PASSWORD_FILE: ${MYSQL_PASSWORD_FILE}
      MYSQL_USER_FILE: ${MYSQL_USER_FILE} 
    # environment:
    #   - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db_root_password
    #   - MYSQL_PASSWORD_FILE=/run/secrets/db_password
    #   - MYSQL_USER_FILE=/run/secrets/db_user     
    #   - MYSQL_DATABASE=wordpress_db
       #${MYSQL_DATABASE}         # MariaDB crée cette base de données
    #   - MYSQL_USER=${MYSQL_USER}                 # MariaDB crée cet utilisateur
    volumes:
      - maria_data:/var/lib/mysql
    networks:
      - internal
    restart: on-failure
    secrets:
      - db_root_password
      - db_password
      - db_user

  wordpress:
    container_name: wordpress
    image: wordpress
    build:
      context: ./wordpress
    # env_file: .env_wp
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}                 
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}

      WORDPRESS_DB_USER_FILE: ${MYSQL_USER_FILE}
      WORDPRESS_DB_PASSWORD_FILE: ${MYSQL_PASSWORD_FILE}

      WORDPRESS_ADM_USER_FILE: ${WORDPRESS_ADM_USER_FILE}
      WORDPRESS_ADM_PASSWORD_FILE: ${WORDPRESS_ADM_PASSWORD_FILE}

      WORDPRESS_USER_FILE: ${WORDPRESS_USER_FILE}
      WORDPRESS_PASSWORD_FILE: ${WORDPRESS_PASSWORD_FILE}
    # environment:
    #   WORDPRESS_DB_HOST: mariadb                 
    #   WORDPRESS_DB_USER_FILE: /run/secrets/db_user         
    
    #   WORDPRESS_DB_NAME: wordpress_db
    #   WORDPRESS_DB_PASSWORD_FILE: /run/secrets/db_password
      
    #   WORDPRESS_ADM_PASSWORD_FILE: /run/secrets/wp_adm_password
    #   WORDPRESS_ADM_USER_FILE: /run/secrets/wp_adm_user
    #   WORDPRESS_PASSWORD_FILE: /run/secrets/wp_password
    #   WORDPRESS_USER_FILE: /run/secrets/wp_user

    secrets:
      - db_user
      - db_password
      - wp_user
      - wp_password
      - wp_adm_user
      - wp_adm_password
    # entrypoint: >
    #   sh -c '      
    #   until mysql -h"maria" -u"${MYSQL_USER}" -p"${MYSQL_PASSWORD}" "${MYSQL_DATABASE}" -e "SELECT 1" >/dev/null 2>&1; do
    #     echo "Waiting for MariaDB...";
    #     sleep 5;
    #   done;
    #   if ! $(wp core is-installed --path=/var/www/html --allow-root); then
    #     wp core install --path=/var/www/html \
    #       --url="http://localhost" \
    #       --title="Mon Super Site" \
    #       --admin_user="admin" \
    #       --admin_password="mot_de_passe_admin" \
    #       --admin_email="admin@exemple.com" \
    #       --skip-email \
    #       --locale="fr_FR" --allow-root;
    #   fi;          
    #   wp user create dupont dupont@example.com --role=editor --user_pass=super_pass --allow-root;      
    #   php-fpm7.4 -F'   
    # entrypoint: >
    #   sh -c '      
    #   until mysql -h"maria" -u"${MYSQL_USER}" -p"$(cat /run/secrets/db_password)" "${MYSQL_DATABASE}" -e "SELECT 1" >/dev/null 2>&1; do
    #     echo "Waiting for MariaDB...";
    #     sleep 5;
    #   done;
      
    #   if ! wp core is-installed --path=/var/www/html --allow-root; then
    #     wp core install --path=/var/www/html \
    #       --url="https://svidot.42.fr" \
    #       --title="Mon Super Site" \
    #       --admin_user="admin" \
    #       --admin_password="mot_de_passe_admin" \
    #       --admin_email="admin@exemple.com" \
    #       --skip-email \
    #       --locale="fr_FR" --allow-root;
    #   else
    #     echo "WordPress is already installed.";
    #   fi
      
    #   if ! wp user get dupont --path=/var/www/html --allow-root >/dev/null 2>&1; then
    #     wp user create dupont dupont@example.com --role=editor --user_pass=super_pass --path=/var/www/html --allow-root;
    #   else
    #     echo "User dupont already exists.";
    #   fi

    #   php-fpm7.4 -F'   
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - internal
    depends_on:
      - mariadb
    restart: on-failure

  nginx:
    container_name: nginx
    image: nginx
    build:
      context: ./nginx
    ports:    
      - "443:443"
    volumes:
      - wordpress_data:/var/www/html 
    networks:
      - internal
    depends_on:
      - wordpress
    restart: on-failure

volumes:
  wordpress_data:
    driver: local 
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/svidot/data/wordpress_data'
  maria_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/home/svidot/data/maria_data'
  # maria_data:
  #   driver: local

networks:
  internal:
    driver: bridge

secrets:
  db_root_password:
    file: ./secrets/db_root_password
  db_password:
    file: ./secrets/db_password
  db_user:
    file: ./secrets/db_user
  wp_user:
    file: ./secrets/wp_user
  wp_password:
    file: ./secrets/wp_password
  wp_adm_user:
    file: ./secrets/wp_adm_user
  wp_adm_password:
    file: ./secrets/wp_adm_password  
    